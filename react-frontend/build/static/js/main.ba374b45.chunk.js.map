{"version":3,"sources":["AppSettings.ts","Api/Auth.tsx","Api/http.ts","Api/Services/TodoService/TodoService.ts","Stores/TodoListStore/TodoListStore.tsx","Stores/RootStore.ts","Stores/Provider.tsx","Shared/Styles.ts","Shared/Header.tsx","Shared/Page.tsx","Pages/Todo/Components/DeleteButton/DeleteButton.tsx","Pages/Todo/Components/CompleteButton/CompleteButton.tsx","Pages/Todo/Components/Todo/Todo.tsx","Pages/Todo/Components/TodoList/TodoList.tsx","Pages/Todo/Components/AddTodoForm/AddTodoForm.tsx","Pages/Todo/TodoLandingPage.tsx","Pages/NotFound/NotFoundPage.tsx","Api/Mocks/WordOfTheDayData.ts","Pages/WordOfTheDay/Components/WotdData.tsx","Pages/WordOfTheDay/WordOfTheDayPage.tsx","Pages/SignIn/SignInPage.tsx","Pages/SignOut/SignOutPage.tsx","Shared/AuthorizedPage.tsx","Shared/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webAPIUrl","authSettings","domain","client_id","redirect_uri","window","location","origin","scope","audience","Auth0Context","React","createContext","isAuthenticated","signIn","signOut","loading","useAuth","useContext","AuthProvider","children","useState","setIsAuthenticated","undefined","user","setUser","auth0Client","setAuth0Client","setLoading","useEffect","a","createAuth0Client","auth0FromHook","pathname","search","indexOf","handleRedirectCallback","replace","isAuthenticatedFromHook","getUser","initAuth0","getAuth0ClientFromState","Error","Provider","value","loginWithRedirect","logout","returnTo","getAccessToken","getTokenSilently","accessToken","http","config","request","Request","path","method","headers","body","JSON","stringify","set","fetch","response","status","ok","json","logError","contentType","get","text","console","error","url","TodoService","result","map","this","mapTodoFromServer","todoId","todo","dateCreated","Date","dateDeadline","dateCompleted","TodoListStore","rootStore","_todoList","makeAutoObservable","getTodos","todos","deleteTodo","successfullyDeleted","removeTodo","postTodo","createdTodo","addTodo","putTodo","updatedTodo","updateTodo","index","findIndex","splice","push","x","todoList","action","store","todoListStore","StoreContext","StoreProvider","gray1","gray2","gray3","gray5","gray6","black2","lightBlue1","lightBlue2","green1","green2","red2","red3","fontFamily","fontSize","baseFieldCSS","css","baseButtonCSS","redPulse","keyframes","greenPulse","PrimaryButton","styled","button","SecondaryButton","Fieldset","fieldset","FieldLabel","div","label","DarkScrollbar","FieldInput","input","FieldError","textarea","SubmissionSuccess","Header","process","to","Page","DeleteButton","handleClick","onClick","CompleteButton","todoPutValues","Todo","observer","title","description","toLocaleDateString","TodoList","data","AddTodoForm","useForm","mode","register","errors","handleSubmit","formState","reset","successfullySubmitted","setSuccessfullySubmitted","submitForm","onSubmit","disabled","isSubmitting","htmlFor","id","name","type","ref","required","validate","TodoLandingPage","fetchTodos","doGetTodos","NotFoundPage","MockWordData","word","results","definition","WotdData","WordOfTheDayPage","log","SignInPage","SignOutPage","message","AuthorizedPage","AppRoutes","element","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba374b45.chunk.js","sourcesContent":["export const server =\r\n  process.env.REACT_APP_ENV === 'production'\r\n    ? 'https://todo2021-backend.azurewebsites.net'\r\n    : process.env.REACT_APP_ENV === 'staging'\r\n    ? 'https://todo2021-staging-backend.azurewebsites.net'\r\n    : 'http://localhost:5000';\r\n\r\nexport const webAPIUrl = `${server}/api`;\r\n\r\nexport const authSettings = {\r\n  domain: 'dev-61ugus9t.eu.auth0.com',\r\n  client_id: 'ymZcnf95xHi18p8NLjVsU2XV3tCT3jdu',\r\n  redirect_uri: window.location.origin + '/signin-callback',\r\n  scope: 'openid profile email',\r\n  audience: 'https://todo',\r\n};\r\n","import React from 'react';\r\nimport createAuth0Client, { Auth0Client } from '@auth0/auth0-spa-js';\r\nimport { authSettings } from '../AppSettings';\r\n\r\ninterface Auth0User {\r\n  name?: string;\r\n  email?: string;\r\n}\r\ninterface IAuth0Context {\r\n  isAuthenticated: boolean;\r\n  user?: Auth0User;\r\n  signIn: () => void;\r\n  signOut: () => void;\r\n  loading: boolean;\r\n}\r\nexport const Auth0Context = React.createContext<IAuth0Context>({\r\n  isAuthenticated: false,\r\n  signIn: () => {},\r\n  signOut: () => {},\r\n  loading: true,\r\n});\r\n\r\nexport const useAuth = () => React.useContext(Auth0Context);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = React.useState<boolean>(false);\r\n  const [user, setUser] = React.useState<Auth0User | undefined>(undefined);\r\n  const [auth0Client, setAuth0Client] = React.useState<Auth0Client>();\r\n  const [loading, setLoading] = React.useState<boolean>(true);\r\n\r\n  React.useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      setLoading(true);\r\n      const auth0FromHook = await createAuth0Client(authSettings);\r\n      setAuth0Client(auth0FromHook);\r\n\r\n      if (\r\n        window.location.pathname === '/signin-callback' &&\r\n        window.location.search.indexOf('code=') > -1\r\n      ) {\r\n        await auth0FromHook.handleRedirectCallback();\r\n        window.location.replace(window.location.origin);\r\n      }\r\n\r\n      const isAuthenticatedFromHook = await auth0FromHook.isAuthenticated();\r\n      if (isAuthenticatedFromHook) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n      setIsAuthenticated(isAuthenticatedFromHook);\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n  }, []);\r\n\r\n  const getAuth0ClientFromState = () => {\r\n    if (auth0Client === undefined) {\r\n      throw new Error('Auth0 client not set');\r\n    }\r\n    return auth0Client;\r\n  };\r\n\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        signIn: () => getAuth0ClientFromState().loginWithRedirect(),\r\n        signOut: () =>\r\n          getAuth0ClientFromState().logout({\r\n            client_id: authSettings.client_id,\r\n            returnTo: window.location.origin + '/signout-callback',\r\n          }),\r\n        loading,\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const auth0FromHook = await createAuth0Client(authSettings);\r\n  const accessToken = await auth0FromHook.getTokenSilently();\r\n  return accessToken;\r\n};\r\n","import { webAPIUrl } from 'AppSettings';\r\n\r\nexport interface HttpRequest<REQB> {\r\n  path: string;\r\n  method?: string;\r\n  body?: REQB;\r\n  accessToken?: string;\r\n}\r\nexport interface HttpResponse<RESB> {\r\n  ok: boolean;\r\n  body?: RESB | null;\r\n}\r\n\r\nexport const http = async <RESB, REQB = undefined>(\r\n  config: HttpRequest<REQB>,\r\n): Promise<HttpResponse<RESB>> => {\r\n  const request = new Request(`${webAPIUrl}${config.path}`, {\r\n    method: config.method || 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: config.body ? JSON.stringify(config.body) : undefined,\r\n  });\r\n\r\n  if (config.accessToken) {\r\n    request.headers.set('authorization', `bearer ${config.accessToken}`);\r\n  }\r\n\r\n  const response = await fetch(request);\r\n\r\n  // No content to parse\r\n  if (response.status === 204) {\r\n    return { ok: response.ok };\r\n  }\r\n\r\n  if (response.ok) {\r\n    const body = await response.json();\r\n\r\n    return { ok: response.ok, body };\r\n  } else {\r\n    logError(request, response);\r\n    return { ok: response.ok };\r\n  }\r\n};\r\n\r\nconst logError = async (request: Request, response: Response) => {\r\n  const contentType = response.headers.get('content-type');\r\n  let body: any;\r\n  if (contentType && contentType.indexOf('application/json') !== -1) {\r\n    body = await response.json();\r\n  } else {\r\n    body = await response.text();\r\n  }\r\n  console.error(`Error requesting ${request.method} ${request.url}`, body);\r\n};\r\n","import { getAccessToken } from 'Api/Auth';\r\nimport { http } from 'Api/http';\r\nimport {\r\n  IPostTodoData,\r\n  IPutTodoData,\r\n  ITodo,\r\n  ITodoFromServer,\r\n} from 'Pages/Todo/Interfaces/ITodo';\r\n\r\nabstract class TodoService {\r\n  public static async getTodos(): Promise<ITodo[]> {\r\n    const accessToken = await getAccessToken();\r\n    const result = await http<ITodoFromServer[]>({\r\n      path: '/todo',\r\n      accessToken: accessToken,\r\n    });\r\n\r\n    if (result.ok && result.body) {\r\n      return result.body.map(this.mapTodoFromServer);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  public static async getTodo(todoId: string): Promise<ITodo | null> {\r\n    const accessToken = await getAccessToken();\r\n    const result = await http<ITodoFromServer>({\r\n      path: '/todo/' + todoId,\r\n      accessToken: accessToken,\r\n    });\r\n\r\n    if (result.ok && result.body) {\r\n      return this.mapTodoFromServer(result.body);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public static async postTodo(\r\n    todo: IPostTodoData,\r\n  ): Promise<ITodo | undefined> {\r\n    const accessToken = await getAccessToken();\r\n    const result = await http<ITodoFromServer, IPostTodoData>({\r\n      path: '/todo',\r\n      method: 'post',\r\n      body: todo,\r\n      accessToken: accessToken,\r\n    });\r\n\r\n    if (result.ok && result.body) {\r\n      return this.mapTodoFromServer(result.body);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public static async putTodo(todo: IPutTodoData): Promise<ITodo | undefined> {\r\n    const accessToken = await getAccessToken();\r\n    const result = await http<ITodoFromServer, IPutTodoData>({\r\n      path: '/todo/' + todo.todoId,\r\n      method: 'put',\r\n      body: todo,\r\n      accessToken: accessToken,\r\n    });\r\n\r\n    if (result.ok && result.body) {\r\n      return this.mapTodoFromServer(result.body);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public static async deleteTodo(todoId: number): Promise<boolean> {\r\n    const accessToken = await getAccessToken();\r\n    const result = await http<null>({\r\n      path: '/todo/' + todoId,\r\n      method: 'delete',\r\n      accessToken: accessToken,\r\n    });\r\n\r\n    if (result.ok) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public static mapTodoFromServer = (todo: ITodoFromServer): ITodo => ({\r\n    ...todo,\r\n    dateCreated: new Date(todo.dateCreated),\r\n    dateDeadline: todo.dateDeadline ? new Date(todo.dateDeadline) : null,\r\n    dateCompleted: todo.dateCompleted ? new Date(todo.dateCompleted) : null,\r\n  });\r\n}\r\n\r\nexport default TodoService;\r\n","import { RootStore } from '../RootStore';\r\nimport { action, makeAutoObservable } from 'mobx';\r\nimport {\r\n  IPostTodoData,\r\n  IPutTodoData,\r\n  ITodo,\r\n} from 'Pages/Todo/Interfaces/ITodo';\r\nimport TodoService from 'Api/Services/TodoService/TodoService';\r\n\r\ninterface TodoListStore {\r\n  rootStore: RootStore;\r\n}\r\n\r\nclass TodoListStore {\r\n  private _todoList: ITodo[];\r\n\r\n  constructor(rootStore: RootStore) {\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n    this._todoList = [];\r\n  }\r\n\r\n  public get todoList(): ITodo[] {\r\n    return this._todoList;\r\n  }\r\n\r\n  @action\r\n  public set todoList(todoList: ITodo[]) {\r\n    this._todoList = todoList;\r\n  }\r\n\r\n  @action\r\n  public async fetchTodos() {\r\n    const todos = await TodoService.getTodos();\r\n    this._todoList = todos;\r\n  }\r\n\r\n  @action\r\n  public async deleteTodo(todoId: number): Promise<Boolean> {\r\n    const successfullyDeleted = await TodoService.deleteTodo(todoId);\r\n    if (successfullyDeleted) this.removeTodo(todoId);\r\n\r\n    return successfullyDeleted;\r\n  }\r\n\r\n  @action\r\n  public async postTodo(todo: IPostTodoData): Promise<ITodo | undefined> {\r\n    const createdTodo = await TodoService.postTodo(todo);\r\n    if (createdTodo) this.addTodo(createdTodo);\r\n\r\n    return createdTodo;\r\n  }\r\n\r\n  @action\r\n  public async putTodo(todo: IPutTodoData): Promise<ITodo | undefined> {\r\n    const updatedTodo = await TodoService.putTodo(todo);\r\n    if (updatedTodo) this.updateTodo(updatedTodo);\r\n\r\n    return updatedTodo;\r\n  }\r\n\r\n  @action\r\n  public removeTodo(todoId: number) {\r\n    const index = this._todoList.findIndex((todo) => todo.todoId === todoId);\r\n    if (index > -1) {\r\n      this._todoList.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  @action\r\n  public addTodo(todo: ITodo) {\r\n    this._todoList.push(todo);\r\n  }\r\n\r\n  @action\r\n  public updateTodo(todo: ITodo) {\r\n    const index = this._todoList.findIndex((x) => x.todoId === todo.todoId);\r\n    if (index > -1) {\r\n      this._todoList.splice(index, 1, todo);\r\n    }\r\n  }\r\n}\r\n\r\nexport default TodoListStore;\r\n","import TodoListStore from './TodoListStore/TodoListStore';\r\n\r\nexport interface RootStore {\r\n  todoListStore: TodoListStore;\r\n}\r\n\r\nexport class RootStore {\r\n  constructor() {\r\n    this.todoListStore = new TodoListStore(this);\r\n  }\r\n}\r\n\r\nconst store = new RootStore();\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport store from './RootStore';\r\n\r\nexport const StoreContext = React.createContext(store);\r\n\r\nexport const StoreProvider: React.FC<{ children: any }> = ({ children }) => {\r\n  return (\r\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { css, keyframes } from '@emotion/react';\r\n\r\nexport const gray1 = '#383737';\r\nexport const gray2 = '#5c5a5a';\r\nexport const gray3 = '#857c81';\r\nexport const gray4 = '#b9b9b9';\r\nexport const gray5 = '#e3e2e2';\r\nexport const gray6 = '#f7f8fa';\r\n\r\nexport const black1 = '#333333';\r\nexport const black2 = '#444444';\r\n\r\nexport const lightBlue1 = '#87CEEB';\r\nexport const lightBlue2 = '#6495ED';\r\n\r\nexport const lilac1 = '#96A9EB';\r\n\r\nexport const green1 = '#00CE30';\r\nexport const green2 = '#00B92B';\r\nexport const green3 = '#00A626';\r\n\r\nexport const red1 = '#8B0000';\r\nexport const red2 = '#FF0000';\r\nexport const red3 = '#DC143C';\r\n\r\nexport const accent1 = '#dbb365';\r\nexport const accent2 = '#efd197';\r\n\r\nexport const fontFamily = \"'Segoe UI', 'Helvetica Neue',sans-serif\";\r\nexport const fontSize = '16px';\r\n\r\nconst baseFieldCSS = css`\r\n  box-sizing: border-box;\r\n  font-family: ${fontFamily};\r\n  font-size: ${fontSize};\r\n  margin-bottom: 5px;\r\n  padding: 8px 10px;\r\n  border: 1px solid ${gray5};\r\n  border-radius: 5px;\r\n  color: ${gray2};\r\n  background-color: white;\r\n  width: 100%;\r\n  :focus {\r\n    box-shadow: 0 0 5pt 4pt ${lightBlue2};\r\n    outline: 0;\r\n  }\r\n  :disabled {\r\n    background-color: ${gray6};\r\n  }\r\n`;\r\n\r\nconst baseButtonCSS = css`\r\n  background-color: ${gray1};\r\n  border: 2px solid;\r\n  font-family: ${fontFamily};\r\n  font-size: ${fontSize};\r\n  font-weight: bold;\r\n  line-height: 1;\r\n  padding: 0.5em 1.25em;\r\n\r\n  :disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst redPulse = keyframes`\r\n  0% {\r\n    box-shadow: 0 0 0 0px ${red2};\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 20px 2px ${red3};\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 20px 0px transparent;\r\n  }\r\n`;\r\n\r\nconst greenPulse = keyframes`\r\n  0% {\r\n    box-shadow: 0 0 0 0px ${green2};\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 20px 2px ${green3};\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 20px 0px transparent;\r\n  }\r\n`;\r\n\r\nexport const PrimaryButton = styled.button`\r\n  ${baseButtonCSS};\r\n  color: ${green2};\r\n  background-color: ${gray1};\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    animation: ${greenPulse} 1s;\r\n    border-color: ${green1};\r\n    color: ${gray6};\r\n    background-color: ${gray2};\r\n  }\r\n\r\n  :active {\r\n    background-color: ${gray3};\r\n  }\r\n`;\r\n\r\nexport const SecondaryButton = styled.button`\r\n  ${baseButtonCSS};\r\n  color: ${red2};\r\n  background-color: ${gray1};\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    animation: ${redPulse} 1s;\r\n    border-color: ${red3};\r\n    color: ${gray6};\r\n    background-color: ${gray2};\r\n  }\r\n\r\n  :active {\r\n    background-color: ${gray3};\r\n  }\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n  width: inherit;\r\n  background-color: ${black2};\r\n  border-radius: 8px;\r\n  border: 1px solid ${black2};\r\n  box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\r\n`;\r\n\r\nexport const FieldContainer = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const FieldLabel = styled.label`\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const DarkScrollbar = css`\r\n  scrollbar-width: thin;\r\n  scrollbar-color: ${lightBlue2} ${black2};\r\n`;\r\n\r\nexport const FieldInput = styled.input`\r\n  ${baseFieldCSS}\r\n`;\r\n\r\nexport const FieldTextArea = styled.textarea`\r\n  ${baseFieldCSS}\r\n`;\r\n\r\nexport const FieldError = styled.div`\r\n  font-size: 12px;\r\n  color: red;\r\n`;\r\n\r\nexport const FormButtonContainer = styled.div`\r\n  margin: 30px 0px 0px 0px;\r\n  padding: 20px 0px 0px 0px;\r\n  border-top: 1px solid ${gray5};\r\n`;\r\n\r\nexport const SubmissionSuccess = styled.div`\r\n  color: ${green1};\r\n`;\r\n\r\nexport const SubmissionFailure = styled.div`\r\n  margin-top: 10px;\r\n  color: red;\r\n`;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useAuth } from 'Api/Auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { lilac1 } from './Styles';\r\n\r\nexport const Header: React.FC = () => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n\r\n  return (\r\n    <div\r\n      css={css`\r\n        display: flex;\r\n        justify-content: space-evenly;\r\n        padding: 1%;\r\n        background-color: ${lilac1};\r\n        box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\r\n      `}\r\n    >\r\n      <span>Environment: {process.env.REACT_APP_ENV || 'dev'}</span>\r\n      <Link\r\n        to=\"todo\"\r\n        css={css`\r\n          text-decoration: none;\r\n        `}\r\n      >\r\n        Todos\r\n      </Link>\r\n      <Link\r\n        to=\"wotd\"\r\n        css={css`\r\n          text-decoration: none;\r\n        `}\r\n      >\r\n        Word of the Day\r\n      </Link>\r\n      {!loading &&\r\n        (isAuthenticated ? (\r\n          <Link\r\n            to=\"signout\"\r\n            css={css`\r\n              text-decoration: none;\r\n            `}\r\n          >\r\n            Sign Out\r\n          </Link>\r\n        ) : (\r\n          <Link\r\n            to=\"signin\"\r\n            css={css`\r\n              text-decoration: none;\r\n            `}\r\n          >\r\n            Sign in\r\n          </Link>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\nexport const Page = ({ children }: Props) => (\r\n  <div\r\n    css={css`\r\n      margin: 10px auto 20px auto;\r\n      padding: 30px 20px;\r\n      max-width: 60%;\r\n    `}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n","import { useContext } from 'react';\r\nimport { SecondaryButton } from 'Shared/Styles';\r\nimport { StoreContext } from 'Stores/Provider';\r\n\r\ninterface IProps {\r\n  todoId: number;\r\n}\r\nexport const DeleteButton: React.FC<IProps> = ({ todoId }) => {\r\n  const { todoListStore } = useContext(StoreContext);\r\n\r\n  const handleClick = async () => {\r\n    await todoListStore.deleteTodo(todoId);\r\n  };\r\n\r\n  return <SecondaryButton onClick={handleClick}>Delete</SecondaryButton>;\r\n};\r\n","import { IPutTodoData } from 'Pages/Todo/Interfaces/ITodo';\r\nimport { useContext } from 'react';\r\nimport { PrimaryButton } from 'Shared/Styles';\r\nimport { StoreContext } from 'Stores/Provider';\r\n\r\ninterface IProps {\r\n  todoId: number;\r\n}\r\nexport const CompleteButton: React.FC<IProps> = ({ todoId }) => {\r\n  const { todoListStore } = useContext(StoreContext);\r\n\r\n  const handleClick = async () => {\r\n    const todoPutValues: IPutTodoData = {\r\n      todoId: todoId,\r\n      dateCompleted: new Date(),\r\n    };\r\n    await todoListStore.putTodo(todoPutValues);\r\n  };\r\n\r\n  return <PrimaryButton onClick={handleClick}>Complete</PrimaryButton>;\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { ITodo } from 'Pages/Todo/Interfaces/ITodo';\r\nimport { black2, gray5, lightBlue1, red2 } from 'Shared/Styles';\r\nimport { DeleteButton } from '../DeleteButton/DeleteButton';\r\nimport { CompleteButton } from '../CompleteButton/CompleteButton';\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface IProps {\r\n  todo: ITodo;\r\n}\r\nexport const Todo: React.FC<IProps> = observer(({ todo }) => {\r\n  return (\r\n    <div\r\n      css={css`\r\n        box-sizing: border-box;\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: inherit;\r\n        height: 100%;\r\n        padding: 5px 10px 5px 10px;\r\n        margin: 0 0 10px 0;\r\n        background-color: ${black2};\r\n        border-radius: 8px;\r\n        box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\r\n      `}\r\n    >\r\n      <div\r\n        css={css`\r\n          display: flex;\r\n        `}\r\n      >\r\n        <div\r\n          css={css`\r\n            width: 70%;\r\n            text-align: left;\r\n          `}\r\n        >\r\n          <div\r\n            css={css`\r\n              font-weight: bold;\r\n              font-size: 30px;\r\n              color: ${lightBlue1};\r\n              width: 100%;\r\n              overflow: hidden;\r\n              white-space: nowrap;\r\n              text-overflow: ellipsis;\r\n            `}\r\n          >\r\n            {todo.title}\r\n          </div>\r\n          <div\r\n            css={css`\r\n              font-size: 18px;\r\n              color: ${lightBlue1};\r\n              margin: 0 0 3px 0;\r\n              width: 100%;\r\n              overflow: hidden;\r\n              white-space: nowrap;\r\n              text-overflow: ellipsis;\r\n            `}\r\n          >\r\n            {todo.description}\r\n          </div>\r\n          <div\r\n            css={css`\r\n              font-size: 12px;\r\n            `}\r\n          >\r\n            <i\r\n              css={css`\r\n                margin: 0 25px 0 0;\r\n                color: ${gray5};\r\n              `}\r\n            >\r\n              <span>Created at: {todo.dateCreated.toLocaleDateString()}</span>\r\n            </i>\r\n            <i\r\n              css={css`\r\n                color: ${red2};\r\n              `}\r\n            >\r\n              {todo.dateDeadline && (\r\n                <span>Deadline: {todo.dateDeadline.toLocaleDateString()}</span>\r\n              )}\r\n            </i>\r\n          </div>\r\n        </div>\r\n        <div\r\n          css={css`\r\n            display: flex;\r\n            width: 30%;\r\n            justify-content: space-around;\r\n            align-items: center;\r\n          `}\r\n        >\r\n          {!todo.dateCompleted && (\r\n            <div>\r\n              <CompleteButton todoId={todo.todoId} />\r\n            </div>\r\n          )}\r\n          <div>\r\n            <DeleteButton todoId={todo.todoId} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { observer } from 'mobx-react';\r\nimport { ITodo } from 'Pages/Todo/Interfaces/ITodo';\r\nimport { Todo } from '../Todo/Todo';\r\n\r\ninterface IProps {\r\n  data: ITodo[];\r\n}\r\nexport const TodoList: React.FC<IProps> = observer(({ data }) => {\r\n  return (\r\n    <ul\r\n      css={css`\r\n        list-style: none;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: inherit;\r\n        padding: 0;\r\n        margin: 0;\r\n      `}\r\n    >\r\n      {data.map((todo) => (\r\n        <li\r\n          key={todo.todoId}\r\n          css={css`\r\n            width: inherit;\r\n          `}\r\n        >\r\n          <Todo todo={todo} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n});\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useForm } from 'react-hook-form';\r\nimport React, { useContext } from 'react';\r\nimport {\r\n  Fieldset,\r\n  FieldLabel,\r\n  FieldInput,\r\n  FieldError,\r\n  PrimaryButton,\r\n  SubmissionSuccess,\r\n} from 'Shared/Styles';\r\nimport { StoreContext } from 'Stores/Provider';\r\n\r\ntype FormData = {\r\n  title: string;\r\n  description: string;\r\n  dateDeadline?: Date;\r\n};\r\n\r\nexport const AddTodoForm: React.FC = () => {\r\n  const { todoListStore } = useContext(StoreContext);\r\n\r\n  const {\r\n    register,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n    reset,\r\n  } = useForm<FormData>({\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const [successfullySubmitted, setSuccessfullySubmitted] = React.useState(\r\n    false,\r\n  );\r\n\r\n  const submitForm = async (data: FormData) => {\r\n    setSuccessfullySubmitted(false);\r\n    const createdTodo = todoListStore.postTodo({ ...data });\r\n    if (createdTodo) {\r\n      setSuccessfullySubmitted(true);\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submitForm)}>\r\n      <Fieldset disabled={formState.isSubmitting}>\r\n        <div\r\n          css={css`\r\n            display: grid;\r\n            grid-gap: 5px;\r\n          `}\r\n        >\r\n          <div\r\n            css={css`\r\n              grid-column: 1 / 1;\r\n            `}\r\n          >\r\n            <FieldLabel\r\n              htmlFor=\"title\"\r\n              css={css`\r\n                color: white;\r\n              `}\r\n            >\r\n              Title\r\n            </FieldLabel>\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-column: 2 / 2;\r\n            `}\r\n          >\r\n            <FieldLabel\r\n              htmlFor=\"description\"\r\n              css={css`\r\n                color: white;\r\n              `}\r\n            >\r\n              Description\r\n            </FieldLabel>\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-column: 3 / 3;\r\n            `}\r\n          >\r\n            <FieldLabel\r\n              htmlFor=\"dateDeadline\"\r\n              css={css`\r\n                color: white;\r\n              `}\r\n            >\r\n              Deadline\r\n            </FieldLabel>\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-row: 2 / 2;\r\n              grid-column: 1 / 1;\r\n            `}\r\n          >\r\n            <FieldInput\r\n              id=\"title\"\r\n              name=\"title\"\r\n              type=\"text\"\r\n              ref={register({\r\n                required: true,\r\n              })}\r\n            />\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-row: 2 / 2;\r\n              grid-column: 2 / 2;\r\n            `}\r\n          >\r\n            <FieldInput\r\n              id=\"description\"\r\n              name=\"description\"\r\n              ref={register({\r\n                required: true,\r\n              })}\r\n            />\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-row: 2 / 2;\r\n              grid-column: 3 / 3;\r\n            `}\r\n          >\r\n            <FieldInput\r\n              id=\"dateDeadline\"\r\n              name=\"dateDeadline\"\r\n              type=\"date\"\r\n              ref={register({\r\n                validate: (value) => new Date(value) >= new Date(),\r\n              })}\r\n            />\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-row: 2 / 2;\r\n              grid-column: 4 / 4;\r\n            `}\r\n          >\r\n            <PrimaryButton type=\"submit\">Add Todo</PrimaryButton>\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-row: 3 / 3;\r\n              grid-column: 1 / 1;\r\n            `}\r\n          >\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <FieldError>*You must enter a title</FieldError>\r\n            )}\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-row: 3 / 3;\r\n              grid-column: 2 / 2;\r\n            `}\r\n          >\r\n            {errors.description && errors.description.type === 'required' && (\r\n              <FieldError>*You must enter a description</FieldError>\r\n            )}\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-row: 3 / 3;\r\n              grid-column: 3 / 3;\r\n            `}\r\n          >\r\n            {errors.dateDeadline && errors.dateDeadline.type === 'validate' && (\r\n              <FieldError>*The deadline cannot be in the past</FieldError>\r\n            )}\r\n          </div>\r\n          <div\r\n            css={css`\r\n              grid-row: 3 / 3;\r\n              grid-column: 4 / 4;\r\n            `}\r\n          >\r\n            {successfullySubmitted && (\r\n              <SubmissionSuccess>Success!</SubmissionSuccess>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Fieldset>\r\n    </form>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { Page } from 'Shared/Page';\r\nimport { black1, DarkScrollbar } from 'Shared/Styles';\r\nimport { TodoList } from './Components/TodoList/TodoList';\r\nimport { AddTodoForm } from './Components/AddTodoForm/AddTodoForm';\r\nimport { StoreContext } from 'Stores/Provider';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport const TodoLandingPage: React.FC = observer(() => {\r\n  const { todoListStore } = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    const doGetTodos = async () => {\r\n      await todoListStore.fetchTodos();\r\n    };\r\n    doGetTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <Page>\r\n      <div\r\n        css={css`\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          border-radius: 15px;\r\n          background-color: ${black1};\r\n          height: 75vh;\r\n        `}\r\n      >\r\n        <h1\r\n          css={css`\r\n            color: white;\r\n          `}\r\n        >\r\n          My Todos\r\n        </h1>\r\n\r\n        <div\r\n          css={css`\r\n            width: 50vw;\r\n          `}\r\n        >\r\n          <AddTodoForm />\r\n          <div\r\n            css={css`\r\n              height: 52vh;\r\n              width: inherit;\r\n              overflow: auto;\r\n              margin: 10px 0 0 0;\r\n              padding: 0 15px 0 0;\r\n              ${DarkScrollbar}\r\n            `}\r\n          >\r\n            <TodoList data={todoListStore.todoList} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Page>\r\n  );\r\n});\r\n","import { Page } from 'Shared/Page';\r\n\r\nexport const NotFoundPage: React.FC = () => {\r\n  return (\r\n    <Page>\r\n      <div>Page not found!</div>\r\n    </Page>\r\n  );\r\n};\r\n","import { IWordData } from 'Pages/WordOfTheDay/Interfaces/IWordOfTheDay';\r\n\r\nexport const MockWordData: IWordData = {\r\n  word: 'Hello',\r\n  results: {\r\n    definition: 'A common greeting.',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { IWordData } from '../Interfaces/IWordOfTheDay';\r\n\r\ninterface IProps {\r\n  data: IWordData;\r\n}\r\nexport const WotdData: React.FC<IProps> = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <p>{data.word}</p>\r\n      <p>{data.results.definition}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { MockWordData } from 'Api/Mocks/WordOfTheDayData';\r\nimport React from 'react';\r\nimport { WotdData } from './Components/WotdData';\r\n\r\nexport const WordOfTheDayPage: React.FC = () => {\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      console.log('Here is the word data: ');\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Word of the day!</h1>\r\n      <WotdData data={MockWordData} />\r\n      <button>Generate new word...</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Page } from 'Shared/Page';\r\nimport { useAuth } from 'Api/Auth';\r\n\r\ntype SigninAction = 'signin' | 'signin-callback';\r\n\r\ninterface Props {\r\n  action: SigninAction;\r\n}\r\n\r\nexport const SignInPage = ({ action }: Props) => {\r\n  const { signIn } = useAuth();\r\n\r\n  if (action === 'signin') {\r\n    signIn();\r\n  }\r\n  return (\r\n    <Page>\r\n      <h1>Sign in page</h1>\r\n      <h2>Signing in ...</h2>\r\n    </Page>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Page } from 'Shared/Page';\r\nimport { useAuth } from 'Api/Auth';\r\n\r\ntype SignoutAction = 'signout' | 'signout-callback';\r\n\r\ninterface Props {\r\n  action: SignoutAction;\r\n}\r\n\r\nexport const SignOutPage = ({ action }: Props) => {\r\n  let message = 'Signing out ...';\r\n\r\n  const { signOut } = useAuth();\r\n\r\n  switch (action) {\r\n    case 'signout':\r\n      signOut();\r\n      break;\r\n    case 'signout-callback':\r\n      message = 'You successfully signed out!';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <h1>Sign out page</h1>\r\n      <h2>{message}</h2>\r\n    </Page>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Page } from './Page';\r\nimport { useAuth } from 'Api/Auth';\r\n\r\nexport const AuthorizedPage: React.FC = ({ children }) => {\r\n  const { isAuthenticated } = useAuth();\r\n  if (isAuthenticated) {\r\n    return <>{children}</>;\r\n  } else {\r\n    return (\r\n      <Page>\r\n        <h1>You do not have access to this page</h1>\r\n      </Page>\r\n    );\r\n  }\r\n};\r\n","import { Routes, Route } from 'react-router-dom';\r\nimport { TodoLandingPage } from 'Pages/Todo/TodoLandingPage';\r\nimport { NotFoundPage } from 'Pages/NotFound/NotFoundPage';\r\nimport { WordOfTheDayPage } from 'Pages/WordOfTheDay/WordOfTheDayPage';\r\nimport { SignInPage } from 'Pages/SignIn/SignInPage';\r\nimport { SignOutPage } from 'Pages/SignOut/SignOutPage';\r\nimport { AuthorizedPage } from './AuthorizedPage';\r\n\r\nexport const AppRoutes: React.FC = () => {\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        path=\"\"\r\n        element={\r\n          <AuthorizedPage>\r\n            <TodoLandingPage />\r\n          </AuthorizedPage>\r\n        }\r\n      />\r\n      <Route path=\"signin\" element={<SignInPage action={'signin'} />} />\r\n      <Route\r\n        path=\"signin-callback\"\r\n        element={<SignInPage action={'signin-callback'} />}\r\n      />\r\n      <Route path=\"signout\" element={<SignOutPage action={'signout'} />} />\r\n      <Route\r\n        path=\"signout-callback\"\r\n        element={<SignOutPage action={'signout-callback'} />}\r\n      />\r\n      <Route\r\n        path=\"todo\"\r\n        element={\r\n          <AuthorizedPage>\r\n            <TodoLandingPage />\r\n          </AuthorizedPage>\r\n        }\r\n      />\r\n      <Route path=\"wotd\" element={<WordOfTheDayPage />} />\r\n      <Route path=\"*\" element={<NotFoundPage />} />\r\n    </Routes>\r\n  );\r\n};\r\n","import { StoreProvider } from 'Stores/Provider';\nimport { AuthProvider } from 'Api/Auth';\nimport { Header } from 'Shared/Header';\nimport { AppRoutes } from 'Shared/Routes';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <AuthProvider>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Header />\n            <AppRoutes />\n          </div>\n        </BrowserRouter>\n      </AuthProvider>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}